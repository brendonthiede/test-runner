{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "defaultValue": "[concat('test-results-', uniqueString(subscription().subscriptionId))]",
      "type": "string"
    },
    "appServicePlanName": {
      "defaultValue": "test-results-plan",
      "type": "string"
    },
    "functionStorageAccountName": {
      "defaultValue": "[concat('testresults', uniqueString(resourceGroup().id))]",
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Storage account names can only contain alphanumeric characters"
      }
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "string"
    },
    "environmentName": {
      "defaultValue": "Development",
      "type": "string",
      "metadata": {
        "description": "This controls certain behaviors in .NET Core apps, e.g. more/less verbose errors"
      }
    }
  },
  "variables": {
    "storageAccountApiVersion": "2018-03-01-preview",
    "appServicePlanApiVersion": "2016-09-01",
    "appServiceApiVersion": "2016-08-01",
    "functionExtensionVersion": "~2",
    "functionWorkerRuntime": "dotnet",
    "functionAppId": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('functionAppName'))]",
    "jisCommonId": "[concat(subscription().id, '/resourceGroups/jiscommon-demo-rg/providers/Microsoft.Web/serverfarms/jiscommon-demo-asplan')]"
  },
  "resources": [
    {
      "comments": "Storage to be used for Function App, static site and image storage",
      "type": "Microsoft.Storage/storageAccounts",
      "kind": "StorageV2",
      "name": "[parameters('functionStorageAccountName')]",
      "apiVersion": "[variables('storageAccountApiVersion')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot"
      },
      "dependsOn": []
    },
    {
      "comments": "Function App that will have Azure Functions deployed to",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[parameters('functionAppName')]",
      "apiVersion": "[variables('appServiceApiVersion')]",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-related:', variables('jisCommonId'))]": "Resource",
        "displayName": "AppService"
      },
      "properties": {
        "serverFarmId": "[variables('jisCommonId')]",
        "siteConfig": {
          "alwaysOn": true,
          "managedPipelineMode": "Integrated",
          "appSettings": [
            {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": "1"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('functionStorageAccountName'),';AccountKey=',listkeys(parameters('functionStorageAccountName'), variables('storageAccountApiVersion')).keys[0].value)]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('functionStorageAccountName'),';AccountKey=',listkeys(parameters('functionStorageAccountName'), variables('storageAccountApiVersion')).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('functionStorageAccountName'),';AccountKey=',listkeys(parameters('functionStorageAccountName'), variables('storageAccountApiVersion')).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[concat(toLower(parameters('functionAppName')), uniquestring(resourceGroup().id))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "[variables('functionExtensionVersion')]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('environmentName')]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://functions.azure.com",
              "https://functions-staging.azure.com",
              "https://functions-next.azure.com"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionStorageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "functionStorageAccountName": {
      "type": "string",
      "value": "[parameters('functionStorageAccountName')]"
    },
    "functionAppUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', parameters('functionAppName'))).hostnames[0]]"
    },
    "functionStorageBlobBaseUrl": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('functionStorageAccountName'))).primaryEndpoints.blob]"
    }
  }
}